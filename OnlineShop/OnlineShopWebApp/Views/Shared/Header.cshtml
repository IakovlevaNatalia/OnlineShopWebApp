@using OnlineShop.db.Models
 <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">OnlineShopWebApp</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
	                        <a class="btn btn-outline-success" asp-area="" asp-controller="Home" asp-action="Index"><span class="bi bi-house-fill"> HOME</span></a>
		                    <a class="btn btn-outline-success" alt="cartImage" asp-area="" asp-controller="Cart" asp-action="Index"><span class="bi bi-cart-fill"> CART @await Component.InvokeAsync("Cart")</span></a>
		                    <a class="btn btn-outline-success" alt="Favotite" asp-area="" asp-controller="Favorite" asp-action="Index"><span class="bi bi-star-fill"> FAVORITE @await Component.InvokeAsync("CalcFavoriteProductsCount")</span></a>
	                    </li>
	                                   

	                    @if (User.Identity.IsAuthenticated)
	                    {
		                    <li class="nav-item dropdown">
			                    <a class="nav-link dropdown-toggle text-dark" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="False">
				                   Hi, @User.Identity.Name
			                    </a>
			                    <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink" ul class="nav justify-content-center"/>
			                    <a class="btn btn-outline-success" asp-route-area="" asp-controller="Account" asp-action="Profile"><span class="bi bi-person-square"> PROFILE</span></a>
			                    <a class="btn btn-outline-success" asp-area="" asp-controller="Account" asp-action="Logout"><span class="bi bi-incognito"> LOG OUT</span></a>
		                    </li>
	
		                    {
			                    <li class="nav-item">
				                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Profile">@await Component.InvokeAsync("Profile")</a>
			                    </li>
		                    }
	                    }
	                    else
	                    {
		                    <li class="nav-item">
			                    <a class="btn btn-outline-success" asp-area="" asp-controller="Account" asp-action="Login"> <span class="bi bi-door-open"> LOG IN</span></a>
		                    </li>
	                    }

	                    @if (User.IsInRole(Constants.AdminRoleName))
	                    {
		                    <li class="nav-item">
			                    <a class="btn btn-outline-success" asp-area="Admin" asp-controller="Order" asp-action="Index"> <span class="bi bi-cup-straw">ADMIN AREA</span></a>
		                    </li>
	                    }
						
                    </ul>
                </div>
            </div>
        </nav>
    </header>
